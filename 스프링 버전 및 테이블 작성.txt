현재 스프링 버전 : 5.X

jdk 8 + spring 5.x
jdk 6 + spring 4.x
jdk 5 + spring 3.x

------------------------------------------------------------------------------------------------------

서버가 실행 되면서 가장 먼저 읽는 파일
# web.xml 파일을 먼저 읽음
- 웹 프로젝트의 배치 기술서
- 웹 프로젝트의 환경설정에 관한 파일

------------------------------------------------------------------------------------------------------

오라클 계정 생성
- 관리자 권한으로 접근 : sqlplus / as sysdba
- 작업할 워크 스페이스 작성 : 
create tablespace spring
datafile 'd:\\work1\\spring.dbf' size 50m 
autoextend on next 10m maxsize unlimited;		// 최대 사이즈를 주지않겠다는 것, 윈도우 10은 폴더를 만들고 생성해야됨

- 사용자 계정 만들기 : 
create user spring identified by 1234
default tablespace spring;

- 사용자 계정 삭제 : drop user spring cascade;

- 사용자 권한 부여 : grant connect, resource, dba to spring;

------------------------------------------------------------------------------------------------------

JSON 형식이 안될때
1. https://mvnrepository.com
2. 검색 : jackson-databind

위 코드에서 자료가 리턴할 때 xml 형식이나 json 형식으로 리턴된다는 것을 알려주어야 함
xml <> </>
json 형식 {"name" : "냉장고", "price" : 500000}
json 형식의 String 형식으로 전달해 주는 라이브러리를 추가해 주어야 함

------------------------------------------------------------------------------------------------------

# spring 과 mybatis 연동

로깅툴을 사용하는 이유

- System.out.println()
  IO 리소스를 많이 사용하여 시스템이 느려집니다.
  로그를 파일로 저장하여 분석할 필요가 있음

- 로깅툴의 종류
  * commons-logging : 스프링3에서 주로 사용함
  * log4j : 효율적인 메모리 관리로 많이 사용하고 있음
  * logback : log4j 보다 성능이 더 우수, 최근에 많이 사용
  * SLF4J : logback을 사용하기 위한 인터페이스

- 로그를 수집할 클래스 변수 선언
 private static final Logger logger = LoggerFactory.getLoger(클래스이름.class)

 static final : 로그 내용이 바뀌지 않도록 지정


- 로그의 레벨
 Debug : Debug, Info, Warn, Error 포함
 Infot : Info, Warn, Error 포함
 Warn : Warn, Error 포함
 Error : Error 포함



javabildpath -> junit4 추가


데이터 메퍼인 mybatis를 사용하는 이유는?
- 자바코드에 데이터베이스 연결 문자열등의 중요한 정보를
  직접 입력하는 것은 보안상 안전하지 않음

/src/test/java 밑에 MybatisTest 클래스를 작성


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

회원 관리 예제

- 전체적인 구성도

Controller
            MemberController.java

Model
            MemberDAO.java        인터페이스
            MemberDAOImpl.java    구현 클래스
            MemberDTO.java        인터페이스    
            memberMapper.xml      SQL 메퍼

View 
            member_list.jsp
            write.jsp
            view.jsp

Service
            MemberService.java        인터페이스
            MemberServiceImpl.java    구현클래스

Service가 하는 역할은 컨트롤러와 모델 사이에 존재하며
현업에서 주로 사용하는 방법임

즉, 서비스는 하나인데 모델 메소드가 여러개라든지 트랜잭션 처리하려고 할 때
서비스 단을 추가해줍니다.

sqlplus spring/1234

-member 테이블 작성
create table member(
userid varchar2(50) not null primary key,
passwd varchar2(50) not null,
name varchar2(50) not null,
email varchar2(50),
join_date date default sysdate
);

-데이터 추가
insert into member(userid, passwd, name, email)
values('kim', '1234', '김철수', 'kim@gmail.com');